<?php
/**
 * 用SyntaxHighlighter实现代码高亮
 * @package FHilight
 * @author df
 * @version 1.1.1
 * @link http://www.df-blog.cn
 * @license http://creativecommons.org/licenses/by-nc-sa/2.5/
 */
class FHilight_Plugin implements Typecho_Plugin_Interface
{
    /**
     * 激活插件方法,如果激活失败,直接抛出异常
     *
     * @access public
     * @return void
     * @throws Typecho_Plugin_Exception
     */
    public static function activate()
    {
        Typecho_Plugin::factory('Widget_Abstract_Contents')->filter = array('FHilight_Plugin', 'render');
		Typecho_Plugin::factory('Widget_Archive')->header = array('FHilight_Plugin', 'Call_Back');
    }
   
    /**
     * 禁用插件方法,如果禁用失败,直接抛出异常
     *
     * @static
     * @access public
     * @return void
     * @throws Typecho_Plugin_Exception
     */
    public static function deactivate(){}
   
    /**
     * 获取插件配置面板
     *
     * @access public
     * @param Typecho_Widget_Helper_Form $form 配置面板
     * @return void
     */
    public static function config(Typecho_Widget_Helper_Form $form){
	$sect= new Typecho_Widget_Helper_Form_Element_Select('sect',array('Default',
  'Django','Eclipse','Emacs','FadeToGrey','Midnight','RDark'),0,_t('代码样式'));
	$form->addInput($sect);
	$CodeType = new Typecho_Widget_Helper_Form_Element_Radio('CodeType', 
        array('Code1' => '[code=php123]代码[/code]',
		'Code2' => '&lt;code lang=php&gt;代码&lt;/code&gt;',
        'Code3' => '&lt;code lang=php line=123&gt;代码&lt;/code&gt;'), 'Code1',
        '标签格式');
        $form->addInput($CodeType->multiMode());
	$filters = new Typecho_Widget_Helper_Form_Element_Checkbox('filters',
	array('AS3'=>'AS3','Bash'=>'Bash','ColdFusion'=>'ColdFusion',
	'Cpp'=>'Cpp,C,C++','CSharp'=>'CSharp,C#','Css'=>'Css',
	'Delphi'=>'Delphi','Diff'=>'Diff','Erlang'=>'Erlang',
	'Groovy'=>'Groovy','Java'=>'Java','JavaFX'=>'JavaFX',
	'JScript'=>'JScript','Perl'=>'Perl','Php'=>'Php',
	'Plain'=>'Plain','PowerShell'=>'PowerShell',
	'Python'=>'Python','Ruby'=>'Ruby','Scala'=>'Scala',
	'Sql'=>'Sql','Vb'=>'Vb','Xml'=>'Xml'),
	array('Php', 'JScript','Python','Cpp' ,'Vb','CSS','Xml'),'语言支持',
	_t('选取需要支持的语言，勿多选，选得多载入的js文件越多，对速度有一定的影响'));
    $form->addInput($filters->multiMode()); 
 }
   
    /**
     * 个人用户的配置面板
     *
     * @access public
     * @param Typecho_Widget_Helper_Form $form
     * @return void
     */
    public static function personalConfig(Typecho_Widget_Helper_Form $form){}   
   
    /**
     * 插件实现方法
     *
     * @access public
     * @return void
     */
    public static function render($value, $widget, $lastResult)
    {
        $value = empty($lastResult) ? $value : $lastResult;
		$settings = Helper::options()->plugin('FHilight');
        if ($widget instanceof Widget_Archive) {
			if($settings->CodeType == 'Code1'){
				$prg_str="/\[code=(.[a-zA-Z]*)([0-9]*)\](.*?)\[\/code\]/is";
			}elseif($settings->CodeType == 'Code2'){
				$prg_str="/<code(\s*lang=\S*)>(.*?)<\/code>/is";
			}else{
				$prg_str="/<code(\s*[a-zA-Z]{4}=\S*)(\s*[a-zA-Z]{4}=\S*)>(.*?)<\/code>/is";
			}
			$value['text'] = preg_replace_callback($prg_str, array('FHilight_Plugin', 'parseCallback'), $value['text']);
        }       
        return $value;     
    }
	public static function parseCallback($matches)
    {  
		$settings = Helper::options()->plugin('FHilight');
		if($settings->CodeType == 'Code1'){
			$lang=$matches[1];
			$line=$matches[2];
			$code=$matches[3];
		}elseif($settings->CodeType == 'Code2'){
			$temp = trim($matches[1]);
			if(!empty($temp)){	
				eval('$' . str_replace(' ', ';$', $temp) . ';');	
			}else{	
				$lang = 'Php';	
			}
			$line = 1;			
			$code=$matches[2];			
		}else{
			$temp = trim($matches[1]);
			if(!empty($temp)){	
				eval('$' . str_replace(' ', ';$', $temp) . ';');	
			}			
			$temp1 = trim($matches[2]);
			if(!empty($temp1)){	
				eval('$' . str_replace(' ', ';$', $temp1) . ';');	
			}
			if($lang == '') {$lang = 'php';}
			if($line == '') {$line = '1';}
			$code=$matches[3];			
		}		
		return '<pre class="brush:'.$lang.'; first-line: '.$line.';auto-links: false; collapse: true">'.$code.'</pre>';
	}

	public static function Call_Back($headlink)
    {
		$Options=Typecho_Widget::widget('Widget_Options');
		$FHiLight_ul=$Options->pluginUrl .'/FHilight/';
		$Css_list=array('Default','Django','Eclipse','Emacs','FadeToGrey','Midnight','RDark');
		$FHiLight_css = 'shTheme' . $Css_list[$Options->plugin('FHilight')->sect] . '.css';
		$Prg_List=$Options->plugin('FHilight')->filters;
		$headlink='<link type="text/css" rel="stylesheet" href="'.$FHiLight_ul.'shCore.css"/>
<link type="text/css" rel="stylesheet" href="'.$FHiLight_ul.$FHiLight_css.'"/>
<script type="text/javascript" src="'.$FHiLight_ul.'shCore.js"></script>';   
		foreach($Prg_List as $item){
			$headlink.='
<script type="text/javascript" src="'.$FHiLight_ul.'shBrush'.$item.'.js"></script>';
	}
		echo $headlink.'
<script type="text/javascript">
  SyntaxHighlighter.config.clipboardSwf = "'.$FHiLight_ul.'clipboard.swf";
  SyntaxHighlighter.config.bloggerMode = true;  
  SyntaxHighlighter.all();
</script>
';
    }
}
